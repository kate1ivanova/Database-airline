// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _3LabaCSharp.Migrations;

#nullable disable

namespace _3LabaCSharp.Migrations
{
    [DbContext(typeof(AirlineContext))]
    [Migration("20241210165255_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_3LabaCSharp.Models.AirlineDetails", b =>
                {
                    b.Property<int>("AirlineDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AirlineDetailsId");

                    b.ToTable("AirlineDetails");

                    b.HasData(
                        new
                        {
                            AirlineDetailsId = 1,
                            ContactNumber = "123-456-7890",
                            Description = "Russian airline"
                        },
                        new
                        {
                            AirlineDetailsId = 2,
                            ContactNumber = "098-765-4321",
                            Description = "Russian airline"
                        },
                        new
                        {
                            AirlineDetailsId = 3,
                            ContactNumber = "555-555-5555",
                            Description = "Russian airline"
                        });
                });

            modelBuilder.Entity("_3LabaCSharp.Models.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"), 1L, 1);

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("FlightId");

                    b.HasIndex("AirlineId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            FlightId = 1,
                            AirlineId = 1,
                            FlightNumber = "D123"
                        },
                        new
                        {
                            FlightId = 2,
                            AirlineId = 2,
                            FlightNumber = "V456"
                        },
                        new
                        {
                            FlightId = 3,
                            AirlineId = 3,
                            FlightNumber = "P789"
                        });
                });

            modelBuilder.Entity("_3LabaCSharp.Models.FlightPassenger", b =>
                {
                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.HasKey("FlightId", "PassengerId");

                    b.HasIndex("PassengerId");

                    b.ToTable("FlightPassengers");

                    b.HasData(
                        new
                        {
                            FlightId = 1,
                            PassengerId = 1
                        },
                        new
                        {
                            FlightId = 1,
                            PassengerId = 2
                        },
                        new
                        {
                            FlightId = 2,
                            PassengerId = 2
                        },
                        new
                        {
                            FlightId = 3,
                            PassengerId = 3
                        });
                });

            modelBuilder.Entity("_3LabaCSharp.Models.Passenger", b =>
                {
                    b.Property<int>("PassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PassengerId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("middleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PassengerId");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            PassengerId = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            middleName = "Duij"
                        },
                        new
                        {
                            PassengerId = 2,
                            FirstName = "Jane",
                            LastName = "Smith",
                            middleName = "Rot"
                        },
                        new
                        {
                            PassengerId = 3,
                            FirstName = "Alice",
                            LastName = "Johnson",
                            middleName = "Eds"
                        });
                });

            modelBuilder.Entity("TodoApi.Models.Airline", b =>
                {
                    b.Property<int>("AirlineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirlineId"), 1L, 1);

                    b.Property<string>("Airlinename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AirlineId");

                    b.ToTable("Airlines");

                    b.HasData(
                        new
                        {
                            AirlineId = 1,
                            Airlinename = "Utair"
                        },
                        new
                        {
                            AirlineId = 2,
                            Airlinename = "Pobeda"
                        },
                        new
                        {
                            AirlineId = 3,
                            Airlinename = "S7Airlines"
                        });
                });

            modelBuilder.Entity("_3LabaCSharp.Models.AirlineDetails", b =>
                {
                    b.HasOne("TodoApi.Models.Airline", "Airline")
                        .WithOne("AirlineDetails")
                        .HasForeignKey("_3LabaCSharp.Models.AirlineDetails", "AirlineDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("_3LabaCSharp.Models.Flight", b =>
                {
                    b.HasOne("TodoApi.Models.Airline", "Airline")
                        .WithMany("Flights")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("_3LabaCSharp.Models.FlightPassenger", b =>
                {
                    b.HasOne("_3LabaCSharp.Models.Flight", "Flight")
                        .WithMany("FlightPassengers")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_3LabaCSharp.Models.Passenger", "Passenger")
                        .WithMany("FlightPassengers")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("_3LabaCSharp.Models.Flight", b =>
                {
                    b.Navigation("FlightPassengers");
                });

            modelBuilder.Entity("_3LabaCSharp.Models.Passenger", b =>
                {
                    b.Navigation("FlightPassengers");
                });

            modelBuilder.Entity("TodoApi.Models.Airline", b =>
                {
                    b.Navigation("AirlineDetails");

                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
